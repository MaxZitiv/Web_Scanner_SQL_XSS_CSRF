"""
This type stub file was generated by pyright.
"""

import asyncio
import collections
import selectors
from . import with_logger

"""
UNIX specific qasync functionality.

Copyright (c) 2018 Gerard Marull-Paretas <gerard@teslabs.com>
Copyright (c) 2014 Mark Harviston <mark.harviston@gmail.com>
Copyright (c) 2014 Arve Knudsen <arve.knudsen@gmail.com>

BSD License
"""
EVENT_READ = ...
EVENT_WRITE = ...
class _SelectorMapping(collections.abc.Mapping):
    """Mapping of file objects to selector keys."""
    def __init__(self, selector) -> None:
        ...
    
    def __len__(self): # -> int:
        ...
    
    def __getitem__(self, fileobj):
        ...
    
    def __iter__(self):
        ...
    


@with_logger
class _Selector(selectors.BaseSelector):
    def __init__(self, parent) -> None:
        ...
    
    def select(self, *args, **kwargs):
        """Implement abstract method even though we don't need it."""
        ...
    
    def register(self, fileobj, events, data=...): # -> SelectorKey:
        ...
    
    def unregister(self, fileobj):
        ...
    
    def modify(self, fileobj, events, data=...): # -> SelectorKey:
        ...
    
    def close(self): # -> None:
        ...
    
    def get_map(self): # -> _SelectorMapping:
        ...
    


class _SelectorEventLoop(asyncio.SelectorEventLoop):
    def __init__(self) -> None:
        ...
    


