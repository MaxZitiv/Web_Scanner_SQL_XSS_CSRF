"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å StatisticsWidget –¥–ª—è views/statistics_widget.py
–ë–µ–∑ –æ—à–∏–±–æ–∫ —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ Pylance
"""

from PyQt5.QtWidgets import (
    QWidget, QGridLayout, QVBoxLayout, QLabel, QProgressBar
)
from PyQt5.QtCore import Qt, pyqtSignal, pyqtSlot
from PyQt5.QtGui import QFont
from typing import Optional, Dict, Any

class StatisticsWidget(QWidget):
    """–í–∏–¥–∂–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self, parent: Optional[QWidget] = None):
        super().__init__(parent)
        self.stats_data: Dict[str, Any] = {
            'urls_found': 0,
            'urls_scanned': 0,
            'forms_found': 0,
            'forms_scanned': 0,
            'vulnerabilities': 0,
            'requests_sent': 0,
            'errors': 0,
            'scan_time': '00:00:00',
            'progress': 0
        }
        
        self.setup_ui()
    
    def setup_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç UI"""
        main_layout = QVBoxLayout()
        main_layout.setSpacing(15)
        main_layout.setContentsMargins(10, 10, 10, 10)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è')
        title_font = QFont()
        title_font.setPointSize(12)
        title_font.setBold(True)
        title_label.setFont(title_font)
        main_layout.addWidget(title_label)
        
        # Grid layout –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        grid_layout = QGridLayout()
        grid_layout.setSpacing(10)
        
        # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.stats_labels: Dict[str, QLabel] = {}
        
        stats_config = [
            ('urls_found', '–ù–∞–π–¥–µ–Ω–æ URL:', 0, 0),
            ('urls_scanned', '–ü—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ URL:', 0, 2),
            ('forms_found', '–ù–∞–π–¥–µ–Ω–æ —Ñ–æ—Ä–º:', 1, 0),
            ('forms_scanned', '–ü—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —Ñ–æ—Ä–º:', 1, 2),
            ('vulnerabilities', '–£—è–∑–≤–∏–º–æ—Å—Ç–µ–π –Ω–∞–π–¥–µ–Ω–æ:', 2, 0),
            ('requests_sent', '–ó–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', 2, 2),
            ('errors', '–û—à–∏–±–æ–∫:', 3, 0),
            ('scan_time', '–í—Ä–µ–º—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', 3, 2),
        ]
        
        for stat_key, stat_label, row, col in stats_config:
            # –ú–µ—Ç–∫–∞
            label = QLabel(stat_label)
            label_font = QFont()
            label_font.setPointSize(10)
            label.setFont(label_font)
            grid_layout.addWidget(label, row, col)
            
            # –ó–Ω–∞—á–µ–Ω–∏–µ
            value_label = QLabel('0')
            value_font = QFont()
            value_font.setPointSize(10)
            value_font.setBold(True)
            value_label.setFont(value_font)
            
            # –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ AlignmentFlag
            from PyQt5.QtCore import Qt
            value_label.setAlignment(
                Qt.Alignment(
                    Qt.AlignmentFlag.AlignRight | Qt.AlignmentFlag.AlignVCenter
                )
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —à–∏—Ä–∏–Ω—É –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π
            value_label.setMinimumWidth(80)
            
            grid_layout.addWidget(value_label, row, col + 1)
            self.stats_labels[stat_key] = value_label
        
        main_layout.addLayout(grid_layout)
        
        # Progress bar
        self.progress_bar = QProgressBar()
        self.progress_bar.setMinimum(0)
        self.progress_bar.setMaximum(100)
        self.progress_bar.setValue(0)
        self.progress_bar.setTextVisible(True)
        main_layout.addWidget(self.progress_bar)
        
        # Stretch –≤ –∫–æ–Ω—Ü–µ
        main_layout.addStretch()
        
        self.setLayout(main_layout)
        self.setStyleSheet("""
            StatisticsWidget {
                background-color: #f5f5f5;
                border-radius: 5px;
                border: 1px solid #e0e0e0;
                padding: 10px;
            }
            QLabel {
                color: #333333;
            }
            QProgressBar {
                border: 1px solid #cccccc;
                border-radius: 3px;
                text-align: center;
                height: 25px;
            }
            QProgressBar::chunk {
                background-color: #4CAF50;
                border-radius: 2px;
            }
        """)
    
    @pyqtSlot(str, int)
    def update_stat(self, stat_name: str, value: int):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
            self.stats_data[stat_name] = value
            
            # –û–±–Ω–æ–≤–ª—è–µ–º UI
            if stat_name in self.stats_labels:
                label = self.stats_labels[stat_name]
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—ã–≤–æ–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                if stat_name == 'vulnerabilities':
                    # –†–∞—Å–∫—Ä–∞—à–∏–≤–∞–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π
                    if value > 0:
                        label.setStyleSheet("color: #d32f2f; font-weight: bold;")
                    else:
                        label.setStyleSheet("color: #388e3c; font-weight: bold;")
                    label.setText(str(value))
                
                elif stat_name == 'errors':
                    # –†–∞—Å–∫—Ä–∞—à–∏–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤ –æ—Ä–∞–Ω–∂–µ–≤—ã–π
                    if value > 0:
                        label.setStyleSheet("color: #f57c00; font-weight: bold;")
                    else:
                        label.setStyleSheet("color: #388e3c; font-weight: bold;")
                    label.setText(str(value))
                
                elif stat_name == 'scan_time':
                    # –í—Ä–µ–º—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
                    label.setText(str(value))
                
                else:
                    # –û—Å—Ç–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
                    label.setText(str(value))
        
        except Exception as e:
            from utils.logger import logger
            logger.error(f"Error updating stat {stat_name}: {e}")
    
    @pyqtSlot(str, str)
    def update_stat_string(self, stat_name: str, value: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ —Ç–∏–ø–∞"""
        try:
            if stat_name in self.stats_labels:
                label = self.stats_labels[stat_name]
                label.setText(str(value))
                self.stats_data[stat_name] = value
        except Exception as e:
            from utils.logger import logger
            logger.error(f"Error updating stat string {stat_name}: {e}")
    
    @pyqtSlot(int)
    def update_progress(self, progress: int):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä"""
        try:
            progress_value = max(0, min(100, progress))
            self.progress_bar.setValue(progress_value)
        except Exception as e:
            from utils.logger import logger
            logger.error(f"Error updating progress: {e}")
    
    def reset_stats(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        try:
            for stat_key in self.stats_labels:
                if stat_key == 'scan_time':
                    self.stats_labels[stat_key].setText('00:00:00')
                else:
                    self.stats_labels[stat_key].setText('0')
            
            self.progress_bar.setValue(0)
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∏–ª–∏
            for label in self.stats_labels.values():
                label.setStyleSheet("")
            
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            for key in self.stats_data:
                self.stats_data[key] = 0
        except Exception as e:
            from utils.logger import logger
            logger.error(f"Error resetting stats: {e}")
    
    def get_stats(self) -> Dict[str, Any]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        return self.stats_data.copy()
    
    def set_stats_visible(self, visible: bool):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–ª–∏ —Å–∫—Ä—ã–≤–∞–µ—Ç –≤–∏–¥–∂–µ—Ç"""
        self.setVisible(visible)